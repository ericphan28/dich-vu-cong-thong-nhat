export default function ServicesPage() {
  // Mock data - trong th·ª±c t·∫ø s·∫Ω fetch t·ª´ database
  const services = [
    {
      id: 1,
      name: 'ƒêƒÉng k√Ω CCCD',
      category: 'Gi·∫•y t·ªù t√πy th√¢n',
      baseFee: 150000,
      processingTime: '1-2 ng√†y',
      description: 'H·ªó tr·ª£ l√†m cƒÉn c∆∞·ªõc c√¥ng d√¢n m·ªõi, ƒë·ªïi, c·∫•p l·∫°i',
      requiredDocs: ['H·ªô kh·∫©u g·ªëc', 'Ch·ª©ng minh th∆∞ c≈©', 'Gi·∫•y khai sinh'],
      totalOrders: 25,
      monthlyRevenue: 3750000,
      isActive: true
    },
    {
      id: 2,
      name: 'Tr√≠ch l·ª•c khai sinh',
      category: 'H·ªô tÏ†Å d√¢n c∆∞',
      baseFee: 100000,
      processingTime: '1 ng√†y',
      description: 'Tr√≠ch l·ª•c khai sinh c√°c lo·∫°i, b·∫£n sao c√≥ c√¥ng ch·ª©ng',
      requiredDocs: ['Gi·∫•y khai sinh g·ªëc', 'CCCD ng∆∞·ªùi y√™u c·∫ßu'],
      totalOrders: 18,
      monthlyRevenue: 1800000,
      isActive: true
    },
    {
      id: 3,
      name: 'ƒêƒÉng k√Ω k·∫øt h√¥n',
      category: 'H·ªô t·ªãch d√¢n c∆∞',
      baseFee: 200000,
      processingTime: '2-3 ng√†y',
      description: 'ƒêƒÉng k√Ω k·∫øt h√¥n, c·∫•p gi·∫•y ch·ª©ng nh·∫≠n k·∫øt h√¥n',
      requiredDocs: ['CCCD 2 b√™n', 'Gi·∫•y kh√°m s·ª©c kh·ªèe', 'Gi·∫•y x√°c nh·∫≠n ƒë·ªôc th√¢n'],
      totalOrders: 12,
      monthlyRevenue: 2400000,
      isActive: true
    },
    {
      id: 4,
      name: 'B·∫£o hi·ªÉm y t·∫ø',
      category: 'B·∫£o hi·ªÉm x√£ h·ªôi',
      baseFee: 300000,
      processingTime: '3-5 ng√†y',
      description: 'ƒêƒÉng k√Ω, gia h·∫°n, thay ƒë·ªïi th√¥ng tin th·∫ª BHYT',
      requiredDocs: ['CCCD', 'H·ªô kh·∫©u', '·∫¢nh 3x4'],
      totalOrders: 8,
      monthlyRevenue: 2400000,
      isActive: true
    },
    {
      id: 5,
      name: 'ƒêƒÉng k√Ω kinh doanh',
      category: 'Kinh doanh',
      baseFee: 500000,
      processingTime: '5-7 ng√†y',
      description: 'ƒêƒÉng k√Ω gi·∫•y ph√©p kinh doanh h·ªô c√° th·ªÉ',
      requiredDocs: ['CCCD ch·ªß h·ªô', 'Gi·∫•y thu√™ m·∫∑t b·∫±ng', 'ƒê∆°n ƒëƒÉng k√Ω'],
      totalOrders: 6,
      monthlyRevenue: 3000000,
      isActive: true
    }
  ];

  const categories = [
    { name: 'Gi·∫•y t·ªù t√πy th√¢n', count: 1, color: 'bg-blue-100 text-blue-800' },
    { name: 'H·ªô t·ªãch d√¢n c∆∞', count: 2, color: 'bg-green-100 text-green-800' },
    { name: 'B·∫£o hi·ªÉm x√£ h·ªôi', count: 1, color: 'bg-purple-100 text-purple-800' },
    { name: 'Kinh doanh', count: 1, color: 'bg-orange-100 text-orange-800' }
  ];

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="bg-white rounded-lg shadow p-6">
        <div className="flex justify-between items-center">
          <div>
            <h1 className="text-2xl font-bold text-gray-800 mb-2">Qu·∫£n l√Ω D·ªãch v·ª•</h1>
            <p className="text-gray-600">C·∫•u h√¨nh v√† qu·∫£n l√Ω c√°c lo·∫°i d·ªãch v·ª•</p>
          </div>
          <button className="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
            + Th√™m d·ªãch v·ª•
          </button>
        </div>
      </div>

      {/* Service Categories */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        {categories.map((category, index) => (
          <div key={index} className="bg-white rounded-lg shadow p-6">
            <div className="flex items-center justify-between">
              <div>
                <span className={`inline-block px-2 py-1 text-xs font-medium rounded-full ${category.color}`}>
                  {category.name}
                </span>
                <p className="text-2xl font-bold text-gray-900 mt-2">{category.count}</p>
                <p className="text-sm text-gray-600">d·ªãch v·ª•</p>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Stats Overview */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">T·ªïng d·ªãch v·ª•</p>
              <p className="text-2xl font-bold text-gray-900">{services.length}</p>
            </div>
            <div className="text-blue-500 text-2xl">‚öôÔ∏è</div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">T·ªïng ƒë∆°n h√†ng</p>
              <p className="text-2xl font-bold text-green-600">
                {services.reduce((sum, service) => sum + service.totalOrders, 0)}
              </p>
            </div>
            <div className="text-green-500 text-2xl">üìã</div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Doanh thu th√°ng</p>
              <p className="text-2xl font-bold text-red-600">
                {(services.reduce((sum, service) => sum + service.monthlyRevenue, 0) / 1000000).toFixed(1)}M
              </p>
            </div>
            <div className="text-red-500 text-2xl">üí∞</div>
          </div>
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">Gi√° trung b√¨nh</p>
              <p className="text-2xl font-bold text-purple-600">
                {Math.round(services.reduce((sum, service) => sum + service.baseFee, 0) / services.length / 1000)}K
              </p>
            </div>
            <div className="text-purple-500 text-2xl">üíµ</div>
          </div>
        </div>
      </div>

      {/* Services Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {services.map((service) => (
          <div key={service.id} className="bg-white rounded-lg shadow p-6 hover:shadow-lg transition-shadow">
            <div className="flex justify-between items-start mb-4">
              <div>
                <h3 className="text-lg font-semibold text-gray-800">{service.name}</h3>
                <span className="inline-block px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800 mt-1">
                  {service.category}
                </span>
              </div>
              <div className="text-right">
                <p className="text-xl font-bold text-red-600">{service.baseFee.toLocaleString('vi-VN')}ƒë</p>
                <p className="text-sm text-gray-500">{service.processingTime}</p>
              </div>
            </div>

            <p className="text-gray-600 text-sm mb-4">{service.description}</p>

            <div className="mb-4">
              <p className="text-sm font-medium text-gray-700 mb-2">Gi·∫•y t·ªù c·∫ßn thi·∫øt:</p>
              <div className="flex flex-wrap gap-1">
                {service.requiredDocs.map((doc, index) => (
                  <span key={index} className="inline-block px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
                    {doc}
                  </span>
                ))}
              </div>
            </div>

            <div className="flex justify-between items-center text-sm text-gray-600 mb-4">
              <div>
                <span className="font-medium">{service.totalOrders}</span> ƒë∆°n h√†ng
              </div>
              <div>
                <span className="font-medium text-green-600">
                  {service.monthlyRevenue.toLocaleString('vi-VN')}ƒë
                </span> doanh thu
              </div>
            </div>

            <div className="flex justify-between items-center">
              <div className="flex items-center">
                <div className={`w-2 h-2 rounded-full mr-2 ${service.isActive ? 'bg-green-500' : 'bg-red-500'}`}></div>
                <span className={`text-sm font-medium ${service.isActive ? 'text-green-600' : 'text-red-600'}`}>
                  {service.isActive ? 'Ho·∫°t ƒë·ªông' : 'T·∫°m d·ª´ng'}
                </span>
              </div>
              <div className="flex space-x-2">
                <button className="text-blue-600 hover:text-blue-800 text-sm font-medium">S·ª≠a</button>
                <button className="text-red-600 hover:text-red-800 text-sm font-medium">X√≥a</button>
                <button className="text-gray-600 hover:text-gray-800 text-sm font-medium">
                  {service.isActive ? 'T·∫Øt' : 'B·∫≠t'}
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Service Performance Chart Placeholder */}
      <div className="bg-white rounded-lg shadow p-6">
        <h3 className="text-lg font-semibold text-gray-800 mb-4">Hi·ªáu su·∫•t d·ªãch v·ª•</h3>
        <div className="h-64 bg-gray-50 rounded-lg flex items-center justify-center">
          <p className="text-gray-500">Bi·ªÉu ƒë·ªì th·ªëng k√™ s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã t·∫°i ƒë√¢y</p>
        </div>
      </div>
    </div>
  );
}