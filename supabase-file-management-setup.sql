-- File Management System Database Setup
-- Execute this in Supabase SQL Editor

-- Create file_categories table
CREATE TABLE IF NOT EXISTS file_categories (
  id VARCHAR(50) PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  icon VARCHAR(10),
  color VARCHAR(50),
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- Create file_documents table
CREATE TABLE IF NOT EXISTS file_documents (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  name VARCHAR(500) NOT NULL,
  original_name VARCHAR(500) NOT NULL,
  file_name VARCHAR(500) NOT NULL UNIQUE,
  file_path VARCHAR(1000) NOT NULL,
  file_size BIGINT NOT NULL,
  file_type VARCHAR(50) NOT NULL,
  mime_type VARCHAR(200),
  category_id VARCHAR(50) REFERENCES file_categories(id),
  description TEXT,
  tags TEXT[] DEFAULT '{}',
  uploaded_by UUID REFERENCES auth.users(id),
  uploaded_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  is_active BOOLEAN DEFAULT TRUE,
  download_count INTEGER DEFAULT 0,
  metadata JSONB DEFAULT '{}'
);

-- Insert default file categories
INSERT INTO file_categories (id, name, description, icon, color) VALUES
('postal-services', 'D·ªãch V·ª• B∆∞u Ch√≠nh', 'T√†i li·ªáu li√™n quan ƒë·∫øn d·ªãch v·ª• b∆∞u ch√≠nh v√† chuy·ªÉn ph√°t', 'üìÆ', 'bg-blue-500'),
('insurance-health', 'B·∫£o Hi·ªÉm Y T·∫ø', 'Quy·∫øt ƒë·ªãnh v√† t√†i li·ªáu BHYT', 'üè•', 'bg-green-500'),
('education', 'Gi√°o D·ª•c', 'Th√¥ng b√°o v√† t√†i li·ªáu gi√°o d·ª•c, h·ªçc ph√≠', 'üéì', 'bg-purple-500'),
('business-plans', 'K·∫ø Ho·∫°ch Kinh Doanh', 'Presentations v√† k·∫ø ho·∫°ch ph√°t tri·ªÉn', 'üìä', 'bg-orange-500'),
('regulations', 'Quy ƒê·ªãnh & Quy·∫øt ƒê·ªãnh', 'C√°c quy·∫øt ƒë·ªãnh h√†nh ch√≠nh v√† quy ƒë·ªãnh', 'üìã', 'bg-red-500'),
('administrative', 'H√†nh Ch√≠nh', 'T√†i li·ªáu h√†nh ch√≠nh t·ªïng qu√°t', 'üèõÔ∏è', 'bg-gray-500')
ON CONFLICT (id) DO NOTHING;

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_file_documents_category_id ON file_documents(category_id);
CREATE INDEX IF NOT EXISTS idx_file_documents_uploaded_by ON file_documents(uploaded_by);
CREATE INDEX IF NOT EXISTS idx_file_documents_uploaded_at ON file_documents(uploaded_at);
CREATE INDEX IF NOT EXISTS idx_file_documents_is_active ON file_documents(is_active);
CREATE INDEX IF NOT EXISTS idx_file_documents_name ON file_documents USING gin(to_tsvector('simple', name));
CREATE INDEX IF NOT EXISTS idx_file_documents_tags ON file_documents USING gin(tags);

-- Enable Row Level Security (RLS)
ALTER TABLE file_categories ENABLE ROW LEVEL SECURITY;
ALTER TABLE file_documents ENABLE ROW LEVEL SECURITY;

-- RLS Policies for file_categories (public read)
DROP POLICY IF EXISTS "file_categories_public_read" ON file_categories;
CREATE POLICY "file_categories_public_read" ON file_categories
  FOR SELECT USING (true);

-- RLS Policies for file_documents
-- Users can read all active files
DROP POLICY IF EXISTS "file_documents_read" ON file_documents;
CREATE POLICY "file_documents_read" ON file_documents
  FOR SELECT USING (is_active = true);

-- Users can insert their own files
DROP POLICY IF EXISTS "file_documents_insert" ON file_documents;
CREATE POLICY "file_documents_insert" ON file_documents
  FOR INSERT WITH CHECK (auth.uid() = uploaded_by);

-- Users can update their own files
DROP POLICY IF EXISTS "file_documents_update" ON file_documents;
CREATE POLICY "file_documents_update" ON file_documents
  FOR UPDATE USING (auth.uid() = uploaded_by);

-- Users can delete (soft delete) their own files
DROP POLICY IF EXISTS "file_documents_delete" ON file_documents;
CREATE POLICY "file_documents_delete" ON file_documents
  FOR DELETE USING (auth.uid() = uploaded_by);

-- Create a function to automatically update updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- Create triggers to automatically update updated_at
DROP TRIGGER IF EXISTS update_file_categories_updated_at ON file_categories;
CREATE TRIGGER update_file_categories_updated_at 
  BEFORE UPDATE ON file_categories 
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

DROP TRIGGER IF EXISTS update_file_documents_updated_at ON file_documents;
CREATE TRIGGER update_file_documents_updated_at 
  BEFORE UPDATE ON file_documents 
  FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- Create a function to increment download count
CREATE OR REPLACE FUNCTION increment_download_count(file_id UUID)
RETURNS VOID AS $$
BEGIN
  UPDATE file_documents 
  SET download_count = download_count + 1,
      updated_at = NOW()
  WHERE id = file_id AND is_active = true;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Grant execute permission on the function
GRANT EXECUTE ON FUNCTION increment_download_count(UUID) TO authenticated;

-- Insert sample data from file-goc folder
INSERT INTO file_documents (
  name, original_name, file_name, file_path, file_size, file_type, mime_type, 
  category_id, description, tags, uploaded_by, is_active, download_count
) VALUES
(
  'GI·∫¢I PH√ÅP ƒê·ªòT PH√Å 6 TH√ÅNG CU·ªêI NƒÇM 2025 - PPBL',
  '250625 GI·∫¢I PH√ÅP ƒê·ªòT PH√Å 6 TH√ÅNG CU·ªêI NƒÇM 2025 - PPBL.pptx',
  '250625_giai_phap_dot_pha.pptx',
  '/images/file-goc/250625 GI·∫¢I PH√ÅP ƒê·ªòT PH√Å 6 TH√ÅNG CU·ªêI NƒÇM 2025 - PPBL.pptx',
  2457600,
  'powerpoint',
  'application/vnd.openxmlformats-officedocument.presentationml.presentation',
  'business-plans',
  'Gi·∫£i ph√°p ƒë·ªôt ph√° 6 th√°ng cu·ªëi nƒÉm 2025 - Ph√≤ng Ph√°t tri·ªÉn B∆∞u ch√≠nh Logistics',
  ARRAY['Gi·∫£i ph√°p', 'K·∫ø ho·∫°ch', '2025', 'Thuy·∫øt tr√¨nh'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  15
),
(
  'Slide N·ªôi dung trao ƒë·ªïi BDT TP v·ªÅ BƒêX t·ªânh th√≠ ƒëi·ªÉm',
  '3107 slide Noi dung trao doi BDT TP ve BƒêX_t·ªânh th√≠ ƒëi·ªÉm.pptx',
  '3107_slide_noi_dung_trao_doi.pptx',
  '/images/file-goc/3107 slide Noi dung trao doi BDT TP ve BƒêX_t·ªânh th√≠ ƒëi·ªÉm.pptx',
  1843200,
  'powerpoint',
  'application/vnd.openxmlformats-officedocument.presentationml.presentation',
  'administrative',
  'Slide n·ªôi dung trao ƒë·ªïi Ban ƒêi·ªÅu tra Trung ∆∞∆°ng v·ªÅ Ban ƒêi·ªÅu tra t·ªânh th√≠ ƒëi·ªÉm',
  ARRAY['BƒêT', 'Th√≠ ƒëi·ªÉm', 'Thuy·∫øt tr√¨nh', 'H√†nh ch√≠nh'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  8
),
(
  'Gia h·∫°n kh·ªëi l∆∞·ª£ng BG TMƒêT ƒë·ªìng gi√°',
  '4020. Gia han kh√¥i luong BG TMƒêT ƒë·ªìng gi√°.pdf',
  '4020_gia_han_khoi_luong_bg_tmdt.pdf',
  '/images/file-goc/4020. Gia han kh√¥i luong BG TMƒêT ƒë·ªìng gi√°.pdf',
  524288,
  'pdf',
  'application/pdf',
  'postal-services',
  'Quy·∫øt ƒë·ªãnh gia h·∫°n kh·ªëi l∆∞·ª£ng B∆∞u g·ª≠i Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ ƒë·ªìng gi√°',
  ARRAY['Quy·∫øt ƒë·ªãnh', 'B∆∞u ch√≠nh', 'TMƒêT', 'Gia h·∫°n'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  12
),
(
  'H∆Ø·ªöNG D·∫™N X√ÇY D·ª∞NG KHHD',
  '6.1 HUONG DAN XAY DUNG KHHD.xlsx',
  '61_huong_dan_xay_dung_khhd.xlsx',
  '/images/file-goc/6.1 HUONG DAN XAY DUNG KHHD.xlsx',
  1048576,
  'excel',
  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  'business-plans',
  'H∆∞·ªõng d·∫´n x√¢y d·ª±ng K·∫ø ho·∫°ch Ho·∫°t ƒë·ªông',
  ARRAY['H∆∞·ªõng d·∫´n', 'K·∫ø ho·∫°ch', 'KHHD', 'Excel'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  25
),
(
  'BHHS B·∫£n ch√†o DBV DNB VNPOST - Th·ªëng Nh·∫•t',
  'BHHS_B·∫£n ch√†o_DBV DNB_VNPOST_Ch·ªâ √°p d·ª•ng ƒëia b√†n huy·ªán Th·ªëng Nh·∫•t c·ªß - final.docx',
  'bhhs_ban_chao_dbv_dnb_vnpost_thong_nhat.docx',
  '/images/file-goc/BHHS_B·∫£n ch√†o_DBV DNB_VNPOST_Ch·ªâ √°p d·ª•ng ƒëia b√†n huy·ªán Th·ªëng Nh·∫•t c·ªß - final.docx',
  2097152,
  'word',
  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
  'insurance-health',
  'B·∫£n ch√†o B·∫£o hi·ªÉm H·ªó tr·ª£ S·ª©c kh·ªèe - ƒê√¥ng Nam B·ªô VNPOST - Huy·ªán Th·ªëng Nh·∫•t',
  ARRAY['BHHS', 'B·∫£o hi·ªÉm', 'VNPOST', 'Th·ªëng Nh·∫•t'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  7
),
(
  'C∆∞·ªõc d·ªãch v·ª• Ti√™u chu·∫©n h√†ng n·∫∑ng c·ªìng k·ªÅnh',
  'C∆∞·ªõc d·ªãch v·ª• Ti√™u chu·∫©n h√†ng n·∫∑ng c·ªìng k·ªÅnh (V1) CTN025.docx',
  'cuoc_dich_vu_tieu_chuan_hang_nang_cong_kenh.docx',
  '/images/file-goc/C∆∞·ªõc d·ªãch v·ª• Ti√™u chu·∫©n h√†ng n·∫∑ng c·ªìng k·ªÅnh (V1) CTN025.docx',
  1572864,
  'word',
  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
  'postal-services',
  'C∆∞·ªõc d·ªãch v·ª• Ti√™u chu·∫©n h√†ng n·∫∑ng c·ªìng k·ªÅnh phi√™n b·∫£n 1 - CTN025',
  ARRAY['Gi√° c∆∞·ªõc', 'B∆∞u ch√≠nh', 'H√†ng n·∫∑ng', 'Ti√™u chu·∫©n'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  18
),
(
  'D·ªäCH V·ª§ B∆ØU CH√çNH CHUY·ªÇN PH√ÅT QT V√Ä TRONG N∆Ø·ªöC',
  'DICH VU B∆ØU CH√çNH CHUY·ªÇN PH√ÅT QT V√Ä TRONG N∆Ø·ªöC.pdf',
  'dich_vu_buu_chinh_chuyen_phat_qt_trong_nuoc.pdf',
  '/images/file-goc/DICH VU B∆ØU CH√çNH CHUY·ªÇN PH√ÅT QT V√Ä TRONG N∆Ø·ªöC.pdf',
  3145728,
  'pdf',
  'application/pdf',
  'postal-services',
  'D·ªãch v·ª• B∆∞u ch√≠nh Chuy·ªÉn ph√°t Qu·ªëc t·∫ø v√† Trong n∆∞·ªõc',
  ARRAY['B∆∞u ch√≠nh', 'Chuy·ªÉn ph√°t', 'Qu·ªëc t·∫ø', 'Trong n∆∞·ªõc'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  32
),
(
  'QUY·∫æT ƒê·ªäNH GIAO CH·ªà TI√äU BHYT T·∫†I X√É TH·ªêNG NH·∫§T',
  'QUY·∫æT ƒê·ªäNH GIAO CH·ªà TI√äU BHYT T·∫†I X√É TH·ªêNG NH·∫§T.pdf',
  'qd_giao_chi_tieu_bhyt_xa_thong_nhat.pdf',
  '/images/file-goc/QUY·∫æT ƒê·ªäNH GIAO CH·ªà TI√äU BHYT T·∫†I X√É TH·ªêNG NH·∫§T.pdf',
  786432,
  'pdf',
  'application/pdf',
  'insurance-health',
  'Quy·∫øt ƒë·ªãnh giao ch·ªâ ti√™u B·∫£o hi·ªÉm Y t·∫ø t·∫°i X√£ Th·ªëng Nh·∫•t',
  ARRAY['Quy·∫øt ƒë·ªãnh', 'BHYT', 'Ch·ªâ ti√™u', 'Th·ªëng Nh·∫•t'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  14
),
(
  'Th∆∞ ng·ªè Ph√≠ HS-GV nƒÉm h·ªçc 2025-2026',
  'Th∆∞ ng·ªè_ Ph√≠ HS-GV-nƒÉm h·ªçc 2025-2026 .doc',
  'thu_ngo_phi_hs_gv_nam_hoc_2025_2026.doc',
  '/images/file-goc/Th∆∞ ng·ªè_ Ph√≠ HS-GV-nƒÉm h·ªçc 2025-2026 .doc',
  307200,
  'word',
  'application/msword',
  'education',
  'Th∆∞ ng·ªè v·ªÅ Ph√≠ H·ªçc sinh - Gi√°o vi√™n nƒÉm h·ªçc 2025-2026',
  ARRAY['Th√¥ng b√°o', 'H·ªçc ph√≠', 'HS-GV', '2025-2026', 'Gi√°o d·ª•c'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  21
),
(
  'D·ªãch v·ª• c√¥ng ƒë·∫ßu gi√¢y',
  'dich-vu-cong-dau-giay.jpg',
  'dich_vu_cong_dau_giay.jpg',
  '/images/file-goc/dich-vu-cong-dau-giay.jpg',
  156672,
  'image',
  'image/jpeg',
  'administrative',
  'H√¨nh ·∫£nh minh h·ªça d·ªãch v·ª• c√¥ng ƒë·∫ßu gi√¢y',
  ARRAY['D·ªãch v·ª• c√¥ng', 'H√¨nh ·∫£nh', 'Minh h·ªça'],
  (SELECT id FROM auth.users LIMIT 1),
  true,
  5
);